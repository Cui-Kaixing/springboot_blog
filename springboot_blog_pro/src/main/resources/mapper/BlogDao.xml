<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ckx.dao.BlogDao">

    <resultMap id="blogMap1" type="com.ckx.domain.Blog">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="content" column="content"></result>
        <result property="typeId" column="type_id"></result>
        <result property="views" column="views"></result>
        <result property="createTime" column="createtime"></result>
        <result property="commentAbled" column="commentabled"></result>
        <association property="type" javaType="com.ckx.domain.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <select id="findAll" resultMap="blogMap1">
        SELECT blog.id,blog.type_id,blog.title,blog.content,blog.views,blog.commentabled,blog.createtime,`type`.name
        FROM blog INNER JOIN `type` ON blog.type_id=`type`.id
    </select>


    <!--根据条件查询-->
    <select id="findByTitleAndType" parameterType="com.ckx.queryvo.BlogQuery" resultMap="blogMap1" >
        SELECT blog.id,blog.type_id,blog.title,blog.content,blog.views,blog.commentabled,blog.createtime,`type`.name,`type`.id
        FROM blog ,`type`
        <where>
            <if test="1 == 1">
                blog.type_id=`type`.id
            </if>
            <if test="typeId != null">
                and blog.type_id=#{typeId}
            </if>
            <if test="title != null and title !=''">
                and blog.title LIKE CONCAT('%',#{title},'%')
            </if>

        </where>
    </select>

    <!--保存博客-->
    <insert id="saveBlog" parameterType="com.ckx.domain.Blog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blog(id,type_id,user_id,title,content,views,commentabled,createtime)
        VALUES (#{id},#{typeId},#{userId},#{title},#{content},#{views},#{commentAbled},#{createTime})
    </insert>


    <update id="updateBlog">
        UPDATE blog SET type_id=#{typeId},user_id=#{userId},title=#{title},content=#{content},views=#{views},commentabled=#{commentAbled},createtime=#{createTime} WHERE id=#{id}
    </update>

    <select id="getBlog" resultMap="blogMap1">
        SELECT blog.id,blog.type_id,blog.title,blog.content,blog.views,blog.commentabled,blog.createtime,`type`.name
        FROM blog INNER JOIN `type` ON blog.type_id=`type`.id WHERE blog.id=#{id}
    </select>

    <delete id="deleteBlog">
        DELETE from blog WHERE id=#{id};
    </delete>

    <!--插入到tag-blog-->
    <insert id="addTagToBlog">
        INSERT INTO blog_tag(blogid,tagid) VALUES (#{blogId},#{tagId})
    </insert>


    <!--根据blogId查找所有的-->
    <select id="getTagIdsByBlogId" resultType="com.ckx.queryvo.BlogIdAndTagIdQuery">
        SELECT * FROM blog_tag WHERE blogid=#{blogId}
    </select>

    <!--根据tagId查找所有的-->
    <select id="getBlogIdsByTagId" resultType="com.ckx.queryvo.BlogIdAndTagIdQuery">
        SELECT * FROM blog_tag WHERE tagid=#{tagId}
    </select>

    <!--删除blog_tag表中的所有含有blogid-->
    <delete id="deleteAllBlogIdTagId">
        DELETE FROM blog_tag WHERE blogid=#{blogId}
    </delete>

    <!--查找首页的4个博文-->
    <select id="findFourBlog" resultMap="blogMap1">
        SELECT blog.id,blog.type_id,blog.title,blog.content,blog.views,blog.commentabled,blog.createtime,`type`.name
        FROM blog INNER JOIN `type` ON blog.type_id=`type`.id LIMIT 4
    </select>

    <!--全局搜索文章-->
    <select id="findBlogByQuery" resultType="com.ckx.domain.Blog">
        SELECT * FROM blog WHERE blog.title LIKE CONCAT('%',#{query},'%') OR blog.content LIKE CONCAT('%',#{query},'%')
    </select>

    <!--删除blog对应的blog_tag表数据-->
    <delete id="deleteAllBlogIdTagIdByTypeId">
        DELETE  FROM blog_tag WHERE blog_tag.blogid IN (SELECT blog.id FROM blog WHERE blog.type_id=#{typeId})
    </delete>

    <delete id="deleteBlogByTypeId">
        DELETE FROM blog WHERE blog.type_id=#{typeId}
    </delete>

    <!--获取时间的分组-->
    <select id="getAchiveGroup" resultType="String">
        SELECT date_format(blog.createtime,'%Y%m') as result FROM blog GROUP BY result DESC
    </select>

    <!--根据时间获取blog-->
    <select id="getBlogByTime" resultMap="blogMap1">
        SELECT blog.id,blog.type_id,blog.title,blog.content,blog.views,blog.commentabled,blog.createtime,`type`.name
        FROM blog INNER JOIN `type` ON blog.type_id=`type`.id WHERE  date_format(blog.createtime,'%Y%m')=#{time}
    </select>

    <select id="getBlogByTypeId" resultMap="blogMap1">
        SELECT blog.id,blog.type_id,blog.title,blog.content,blog.views,blog.commentabled,blog.createtime,`type`.name
        FROM blog INNER JOIN `type` ON blog.type_id=`type`.id WHERE  blog.type_id=#{id}
    </select>

</mapper>